services:
- docker:dind

stages:
- static
- build
- test

variables:
  DOCKER_DRIVER: overlay
  TEST_IMAGE: registry.gitlab.com/gitlab-org/gitlab-development-kit:latest

codequality:
  image: docker:latest
  stage: static
  variables:
    DOCKER_DRIVER: overlay
  services:
    - docker:dind
  script:
    - docker pull codeclimate/codeclimate
    - docker run --env CODECLIMATE_CODE="$PWD" --volume "$PWD":/code --volume /var/run/docker.sock:/var/run/docker.sock --volume /tmp/cc:/tmp/cc codeclimate/codeclimate validate-config
    - docker run --env CODECLIMATE_CODE="$PWD" --volume "$PWD":/code --volume /var/run/docker.sock:/var/run/docker.sock --volume /tmp/cc:/tmp/cc codeclimate/codeclimate analyze -f json > codeclimate.json
  artifacts:
    paths: [codeclimate.json]

build:image:
  image: docker:git
  stage: build
  script:
    # taken from https://gitlab.com/gitlab-org/gitlab-qa/blob/master/.gitlab-ci.yml
    - ./bin/docker load
    - ./bin/docker build
    - ./bin/docker store
    - test -n "$CI_BUILD_TOKEN" || exit 0
    - ./bin/docker publish
  when: manual
  cache:
      key: "docker-build-cache"
      paths:
        - ./latest_image.tar

test:install:
  image: $TEST_IMAGE
  stage: test
  artifacts:
    paths:
      - ./*.log
      - ./gitlab/log/*.log
    expire_in: 2 days
    when: always
  script:
    - source /home/gdk/.bash_profile
    - cd gem
    - gem build gitlab-development-kit.gemspec
    - gem install gitlab-development-kit-*.gem
    - cd /home/gdk
    - gdk init
    - cd gitlab-development-kit
    - git remote set-url origin $CI_REPOSITORY_URL
    - git fetch
    - git checkout $CI_COMMIT_SHA
    - netstat -lpt
    - gdk install
    - support/set-gitlab-upstream
    - killall node || true
    - gdk run &
    - sleep 30
    - curl -f --retry 10 --retry-delay 5 http://127.0.0.1:3000/

test:vagrant:
  image: "ruby:2.4"
  stage: test
  script:
    - apt-get update && apt-get install -y apt-transport-https ca-certificates curl gnupg2 software-properties-common rsync
    - curl -fsSL https://download.docker.com/linux/debian/gpg | apt-key add -
    - add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/debian $(lsb_release -cs) stable"
    - apt-get update && apt-get install -y docker-ce
    - service docker start
    - wget https://releases.hashicorp.com/vagrant/1.9.7/vagrant_1.9.7_x86_64.deb
    - dpkg -i vagrant_1.9.7_x86_64.deb
    - vagrant up --provider=docker
