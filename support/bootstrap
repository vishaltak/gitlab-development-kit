#!/usr/bin/env bash

set -euo pipefail

parent_path=$(dirname "$0")

# shellcheck source=support/bootstrap-common.sh
source "${parent_path}"/bootstrap-common.sh

ASDF_VERSION_TO_INSTALL="v0.11.1"

GDK_BOOTSTRAPPED_FILE="${GDK_CACHE_DIR}/.gdk_bootstrapped"

asdf_install() {
  if [[ ! -d "${CURRENT_ASDF_DIR}" ]]; then
    git clone https://github.com/asdf-vm/asdf.git "${CURRENT_ASDF_DIR}" --branch ${ASDF_VERSION_TO_INSTALL}

    asdf_add_initializer "${HOME}/.bashrc" "asdf.sh"
    asdf_add_initializer "${HOME}/.zshrc" "asdf.sh"

    return 0
  fi

  return 0
}

asdf_add_initializer() {
  [[ -f "${1}" ]] && echo -e "\n# Added by GDK bootstrap\nsource ${CURRENT_ASDF_DIR}/${2}" >> "${1}"
}

asdf_install_tools() {
  # Install all tools specified in .tool-versions
  local asdf_arch_opts

  asdf_arch_opts=""

  if [[ "${OSTYPE}" == "darwin"* ]]; then
    if [[ "${CPU_TYPE}" == "arm64" && "${GDK_MACOS_ARM64_NATIVE}" == "false" ]]; then
      # Support running brew under Rosetta 2 on Apple Silicon machines
      asdf_arch_opts="arch -x86_64"
    fi
  fi

  bash -c "MAKELEVEL=0 ${asdf_arch_opts} asdf install"

  return $?
}

gdk_prepare_directory() {
  # TODO: Touching .gdk-install-root will be redundant shortly.
  [[ ! -f ".gdk-install-root"  ]] && echo "${PWD}" > .gdk-install-root

  return 0
}

gdk_mark_bootstrapped() {
  mkdir -p "${GDK_CACHE_DIR}"
  sha256sum "${ROOT_PATH}/bin/gdk" "${ROOT_PATH}/support/makefiles/Makefile.bootstrap.mk" "${ROOT_PATH}"/support/bootstrap* > "${GDK_BOOTSTRAPPED_FILE}"

  echo
  echo "INFO: Bootstrap successful!"
  echo "INFO: To make sure GDK commands are available in this shell, run:"
  echo
  echo "source \"${CURRENT_ASDF_DIR}/asdf.sh\""
  echo
}

###############################################################################

if checksum_file_matches "${GDK_BOOTSTRAPPED_FILE}"; then
  echo "INFO: This GDK has already been bootstrapped."
  echo "INFO: Remove '${GDK_BOOTSTRAPPED_FILE}' to re-bootstrap."
  exit 0
fi

common_preflight_checks

if ! setup_platform; then
  error "Failed to install set up platform." >&2
fi

echo "INFO: Installing asdf.."
if ! asdf_install; then
  error "Failed to install asdf." >&2
fi

echo "INFO: Installing/updating asdf plugins.."
if ! asdf_install_update_plugins; then
  error "Failed to install some asdf plugins." >&2
fi

echo "INFO: Installing asdf tools.."
if ! asdf_install_tools; then
  error "Failed to install some asdf tools." >&2
fi

echo "INFO: Reshimming asdf.."
if ! asdf_reshim; then
  error "Failed to reshim asdf." >&2
fi

if ! gdk_install_gdk_clt; then
  error "Failed to run gdk_install_gdk_clt()." >&2
fi

echo "INFO: Preparing GDK directory.."
if ! gdk_prepare_directory; then
  error "Failed to prepare GDK directory." >&2
fi

echo "INFO: Configuring Ruby.."
if ! configure_ruby; then
  error "Failed to configure Ruby." >&2
fi

gdk_mark_bootstrapped
