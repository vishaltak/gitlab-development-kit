#!/usr/bin/env ruby
# frozen_string_literal: true

# Example:
#
#   GIT_REVISION=<revision> ./support/component-git-clone <depth_param> <repo_name> <component_name>
#

require_relative '../lib/gdk'

PROGNAME = File.basename(__FILE__)

def clone(git_clone_args)
  command = %w[git clone --quiet] + git_clone_args

  Shellout.new(command).execute(retry_attempts: 3).success?
end

def checkout(revision, dir)
  Shellout.new(%W[git checkout #{revision}], chdir: dir).execute.success?
end

def main(argv)
  revision = ENV['GIT_REVISION']
  _, dir = argv

  abort "ERROR: Unable to clone '#{argv}'" unless clone(argv)
  return true unless revision

  abort "ERROR: Unable to checkout '#{revision}'" unless checkout(revision, dir)
end

abort "Usage: #{PROGNAME} [options]" if ARGV.count < 1

main(ARGV)
