#!/usr/bin/env ruby
# frozen_string_literal: true

require_relative '../lib/gdk/config'
require_relative '../lib/shellout.rb'

PROGNAME = File.basename(__FILE__)

def worktree_status
  @worktree_status ||= Shellout.new(%w[git diff --stat]).run
end

def warn_if_git_stash
  return if worktree_status.empty?

  warn <<~EOS

  ~~~~~~~~~~~~~~~~~~~~~~~ WARNING ~~~~~~~~~~~~~~~~~~~~~~~
  We're stashing the following changes with `git stash`:

  #{worktree_status}

  To restore these changes, run `git stash pop`.
  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

  EOS
end

def auto_update_component?(component)
  config = GDK::Config.new[component]
  abort "unknown component: #{component.inspect}" unless config

  config.auto_update
end

def update_component(revision)
  [
    %w[git stash --quiet],
    %w[git fetch --all --tags --prune],
    %W[git checkout #{revision}],
  ].each do |cmd|
    next if system(*cmd)

    abort "command failed: #{cmd.join(' ')}"
  end
end

def main(component, worktree, revision)
  unless auto_update_component?(component)
    warn "#{PROGNAME}: auto update for #{component} is disabled via gdk.yml"
    exit
  end

  Dir.chdir(worktree)
  warn_if_git_stash

  update_component(revision)
end

abort "usage: #{PROGNAME} COMPONENT WORKTREE REVISION" if ARGV.count!= 3

main(*ARGV)
